[{"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js":"2","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js":"3","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js":"4","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js":"5","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js":"6","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js":"7","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js":"8","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js":"9","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\store\\RootStore.js":"10","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\auth\\AuthContext.js":"11","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\api\\axios-config.js":"12","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\flower\\FlowerContext.js":"13","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\pay\\Pay.js":"14","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\order\\Order.js":"15"},{"size":1614,"mtime":1613916308650,"results":"16","hashOfConfig":"17"},{"size":1933,"mtime":1613916436104,"results":"18","hashOfConfig":"17"},{"size":1360,"mtime":1609159877529,"results":"19","hashOfConfig":"17"},{"size":276,"mtime":1609159622281,"results":"20","hashOfConfig":"17"},{"size":6035,"mtime":1609160526599,"results":"21","hashOfConfig":"17"},{"size":694,"mtime":1609684447742,"results":"22","hashOfConfig":"17"},{"size":1228,"mtime":1609723643586,"results":"23","hashOfConfig":"17"},{"size":2748,"mtime":1609745436778,"results":"24","hashOfConfig":"17"},{"size":594,"mtime":1609678098335,"results":"25","hashOfConfig":"17"},{"size":600,"mtime":1609675694190,"results":"26","hashOfConfig":"17"},{"size":1203,"mtime":1613916348441,"results":"27","hashOfConfig":"17"},{"size":746,"mtime":1613916411942,"results":"28","hashOfConfig":"17"},{"size":3169,"mtime":1610024790222,"results":"29","hashOfConfig":"17"},{"size":7602,"mtime":1610024768748,"results":"30","hashOfConfig":"17"},{"size":4753,"mtime":1610026188234,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f2kkcr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js",["73","74"],"import React from 'react'\r\nimport { Table, Tag, Space } from 'antd'\r\nimport style from './home.module.scss'\r\n\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: \"袁晓\",\r\n        college: \"计算机与软件学院\",\r\n        major: \"软件工程\",\r\n        title: '基于强化学习的游戏AI'\r\n    },\r\n    {\r\n        key: '2',\r\n        name: \"邹天\",\r\n        college: \"计算机与软件学院\",\r\n        major: \"计算机科学与技术\",\r\n        title: '论文管理系统',\r\n    },\r\n];\r\n\r\n\r\nconst trans = (text) => {\r\n    return (\r\n        <span style={{ display: 'table', margin: '0 auto' }}>{text}</span>\r\n    )\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        title: trans('教师'),\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center'\r\n    },\r\n    {\r\n        title: trans('学院'),\r\n        dataIndex: 'college',\r\n        key: 'college',\r\n        align: 'center'\r\n    },\r\n    {\r\n        title: trans('专业'),\r\n        dataIndex: 'major',\r\n        key: 'major',\r\n        align: 'center'\r\n    },\r\n    {\r\n        title: trans('题目'),\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        align: 'center',\r\n    },\r\n];\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={style.home}>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home",["75","76"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js",[],["77","78"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js",["79"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport style from './edit.module.scss'\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef();\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async (e) => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{\r\n                        paddingRight: 24,\r\n                    }}\r\n                    onClick={toggleEdit}\r\n                >\r\n                    {children}\r\n                </div>\r\n            );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'name',\r\n                dataIndex: 'name',\r\n                width: '30%',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'age',\r\n                dataIndex: 'age',\r\n            },\r\n            {\r\n                title: 'address',\r\n                dataIndex: 'address',\r\n            },\r\n            {\r\n                title: 'operation',\r\n                dataIndex: 'operation',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: '0',\r\n                    name: 'Edward King 0',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 0',\r\n                },\r\n                {\r\n                    key: '1',\r\n                    name: 'Edward King 1',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 1',\r\n                },\r\n            ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`,\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return (\r\n            <div className={style.edit}>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{\r\n                        marginBottom: 16,\r\n                    }}\r\n                >\r\n                    Add a row\r\n                </Button>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable",["80","81"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js",["82","83"],"import React from 'react'\r\nimport style from './display.module.scss'\r\nimport Cart from './Cart';\r\nimport Goods from './Goods';\r\nimport { Button, Layout } from 'antd'\r\nimport Search from './Search';\r\nconst { Header, Content } = Layout;\r\n\r\nconst Display = () => {\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Header style={{ background: \"pink\" }}>\r\n                    <Search />\r\n\r\n                </Header>\r\n                <Content style={{ background: \"white\" }}>\r\n                    <Goods />\r\n                    <Cart />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Wrapper = () => (\r\n    <Display />\r\n)\r\n\r\nexport default Wrapper",["84","85"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\store\\RootStore.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\auth\\AuthContext.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\api\\axios-config.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\flower\\FlowerContext.js",["86"],"import { useLocalObservable } from \"mobx-react\"\r\nimport img0 from '../../images/flowers/0.jpg'\r\nimport img1 from '../../images/flowers/1.jpg'\r\nimport img2 from '../../images/flowers/2.jpg'\r\nimport img3 from '../../images/flowers/3.jpg'\r\nimport { api } from \"../../api/axios-config\"\r\n\r\nconst initalValues = {\r\n    flowers: [{\r\n        price: 158,\r\n        title: '11枝红玫瑰+栀子叶',\r\n        img: img0,\r\n        id: 0\r\n    }, {\r\n        price: 268,\r\n        title: '19枝苏醒玫瑰+2枝粉色桔梗',\r\n        img: img1,\r\n        id: 1\r\n    }, {\r\n        price: 378,\r\n        title: '浓33枝红玫瑰+梦幻黑纱',\r\n        img: img2,\r\n        id: 2\r\n    }, {\r\n        price: 628,\r\n        title: '戴安娜粉玫瑰+紫色勿忘我',\r\n        img: img3,\r\n        id: 3\r\n    },\r\n    ],\r\n    searchText: \"\",\r\n    cart: new Map(),\r\n    cartVisible: false,\r\n    order: []\r\n}\r\n\r\nconst FlowerContext = () => {\r\n    const store = useLocalObservable(() => ({\r\n        ...initalValues,\r\n\r\n        search(text) {\r\n            store.searchText = text\r\n        },\r\n\r\n        get result() {\r\n            return store.flowers.filter((element) => {\r\n                return element.title.search(store.searchText) !== -1\r\n            })\r\n        },\r\n\r\n        setCartVisible(state) {\r\n            store.cartVisible = state\r\n        },\r\n\r\n        addGoods(id) {\r\n            let count = store.cart.get(id)\r\n            count = count ? count + 1 : 1\r\n            store.cart.set(id, count)\r\n        },\r\n\r\n        minusGoods(id) {\r\n            let count = store.cart.get(id)\r\n            if (!count) return\r\n            count = count - 1\r\n            if (count === 0) {\r\n                store.cart.delete(id)\r\n            } else {\r\n                store.cart.set(id, count)\r\n            }\r\n        },\r\n\r\n        get cartGoods() {\r\n            const result = []\r\n            store.cart.forEach((value, key) => {\r\n                result.push(\r\n                    {\r\n                        ...store.flowers[key],\r\n                        number: value,\r\n                        key\r\n                    }\r\n                )\r\n            });\r\n\r\n            return result\r\n        },\r\n\r\n        addOrder(information, list, money) {\r\n            // console.log(JSON.stringify(information), JSON.stringify(list))\r\n\r\n            list.forEach(({ id }) => {\r\n                store.cart.delete(id)\r\n            })\r\n\r\n            // console.log(JSON.stringify(store.cart))\r\n\r\n            store.order.push({\r\n                information,\r\n                list,\r\n                isReceived: false,\r\n                isSent: false,\r\n                money\r\n            })\r\n            // console.log(store.order)\r\n        },\r\n\r\n        get orderList() {\r\n            return store.order.map(value => {\r\n                const { list } = value\r\n                let newList = list.map(({id, number}) => {\r\n                    return {\r\n                        ...store.flowers[id],\r\n                        number\r\n                    }\r\n                })\r\n                return {...value, list: newList}\r\n            })\r\n        }\r\n    }))\r\n\r\n    return store\r\n}\r\n\r\nexport default FlowerContext","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\pay\\Pay.js",["87"],"import { observer } from \"mobx-react\"\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Cascader, Input, Select, Table, Form, Modal } from 'antd';\r\nimport { RootStoreContext } from \"../../store/RootStore\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport style from './pay.module.scss'\r\nimport QRCode from 'qrcode.react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        render: (text) => <span>{text}</span>,\r\n        key: 'id'\r\n    },\r\n    {\r\n        title: '商品',\r\n        dataIndex: 'title',\r\n        key: 'title'\r\n    },\r\n    {\r\n        title: '个数',\r\n\r\n        dataIndex: 'number',\r\n        key: 'number'\r\n    },\r\n    {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        key: 'price'\r\n    }\r\n\r\n];\r\n\r\nconst residences = [\r\n    {\r\n        value: '广东省',\r\n        label: '广东省',\r\n        children: [\r\n            {\r\n                value: '广州市',\r\n                label: '广州市',\r\n                children: [\r\n                    {\r\n                        value: '天河区',\r\n                        label: '天河区',\r\n                    },\r\n                    {\r\n                        value: '越秀区',\r\n                        label: '越秀区',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                value: '深圳市',\r\n                label: '深圳市',\r\n                children: [\r\n                    {\r\n                        value: '南山区',\r\n                        label: '南山区',\r\n                    },\r\n                    {\r\n                        value: '福田区',\r\n                        label: '福田区',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: '福建省',\r\n        label: '福建省',\r\n        children: [\r\n            {\r\n                value: '厦门市',\r\n                label: '厦门市',\r\n                children: [\r\n                    {\r\n                        value: '集美区',\r\n                        label: '集美区',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n// const data = [{ \"price\": 378, \"title\": \"浓33枝红玫瑰+梦幻黑纱\", \"img\": \"/static/media/2.e88520e9.jpg\", \"id\": 2, \"number\": 3, \"key\": 2 },\r\n// { \"price\": 268, \"title\": \"19枝苏醒玫瑰+2枝粉色桔梗\", \"img\": \"/static/media/1.bdbb4833.jpg\", \"id\": 1, \"number\": 2, \"key\": 1 }]\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst Pay = observer(() => {\r\n    const { flowerStore } = useContext(RootStoreContext)\r\n    const [money, setMoney] = useState(0)\r\n    const [list, setList] = useState([])\r\n    const [visible, setVisible] = useState(false)\r\n    const [information, setInformation] = useState({})\r\n    const history = useHistory()\r\n\r\n    const tableChange = (selectedRowKeys, selectedRows) => {\r\n        // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n        // console.log(JSON.stringify(selectedRows))\r\n\r\n        setList(selectedRows.map(value => {\r\n            return {\r\n                id: value.key,\r\n                number: value.number\r\n            }\r\n        }))\r\n\r\n        setMoney(selectedRows.reduce((total, current) => {\r\n            return total + current.number * current.price\r\n        }, 0))\r\n    }\r\n\r\n    const onFinish = values => {\r\n        // console.log(JSON.stringify(values))\r\n        setInformation(values)\r\n        // console.log(JSON.stringify(list))\r\n        setVisible(true)\r\n    }\r\n\r\n    const toOrder = () => {\r\n        history.push('/order')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            setTimeout(() => {\r\n                setVisible(false)\r\n                flowerStore.addOrder(information, list, money)\r\n            }, 3000)\r\n        }\r\n    }, [visible])\r\n\r\n    return (\r\n        <>\r\n            <div className={style.pay}>\r\n                <Table\r\n                    rowSelection={{\r\n                        onChange: tableChange,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={flowerStore.cartGoods}\r\n                    pagination={false}\r\n                    summary={() => {\r\n                        return <Table.Summary.Row>\r\n                            <Table.Summary.Cell colSpan={5}><span style={{ display: 'table', margin: '0 auto' }}><Text type=\"danger\">总金额：{money}</Text></span></Table.Summary.Cell>\r\n                        </Table.Summary.Row>\r\n                    }}\r\n                />\r\n                <Form\r\n                    {...layout}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        label=\"收货人\"\r\n                        name=\"receiver\"\r\n                    >\r\n                        <Input style={{ width: '65%' }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"电话号码\"\r\n                        name=\"phone\"\r\n                    >\r\n                        <Input style={{ width: '65%' }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"地址\"\r\n                    >\r\n                        <Input.Group compact>\r\n                            <Form.Item\r\n                                name={['address', 'region']}\r\n                                noStyle\r\n                            >\r\n                                <Cascader placeholder=\"所在地区\" options={residences} style={{ width: '25%' }} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['address', 'address']}\r\n                                noStyle\r\n                            >\r\n                                <Input placeholder=\"详细地址\" style={{ width: '40%' }} />\r\n                            </Form.Item>\r\n                        </Input.Group>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"物流\"\r\n                        name=\"expressCompany\"\r\n                    >\r\n                        <Select style={{ width: 100 }} >\r\n                            <Select.Option value=\"顺丰\">顺丰</Select.Option>\r\n                            <Select.Option value=\"圆通\">圆通</Select.Option>\r\n                            <Select.Option value=\"邮政包裹\">邮政包裹</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"备注\"\r\n                        name=\"remark\"\r\n                    >\r\n                        <Input style={{ width: '65%' }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">付款</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n            <Modal \r\n                visible={visible}\r\n                footer={null}\r\n                title=\"扫描二维码付款\"\r\n            >\r\n                <QRCode level='H' value=\"http://tstxxy.icu\" style={{display: 'block', margin: '0 auto'}}/>\r\n            </Modal>\r\n            <Button className={style.order} onClick={toOrder}>订单中心</Button>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Pay","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\order\\Order.js",["88","89","90"],"import React, { useContext } from 'react'\r\nimport { Badge, Button, Card, Divider, Image, List, Space } from 'antd'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../store/RootStore';\r\nimport style from './order.module.scss'\r\nimport Text from 'antd/lib/typography/Text';\r\n\r\n\r\nconst data = [{\r\n    \"information\":\r\n    {\r\n        \"receiver\": \"tstxxy\", \"phone\": \"15338755459\", \"address\": {\r\n            \"region\": [\"广东省\", \"广州市\", \"天河区\"],\r\n            \"address\": \"天河体育中心\"\r\n        }, \"expressCompany\": \"顺丰\", \"remark\": \"孟觉觉\"\r\n    },\r\n    \"list\": [\r\n        { \"price\": 158, \"title\": \"11枝红玫瑰+栀子叶\", \"img\": \"/static/media/0.6d5e7135.jpg\", \"id\": 0, \"number\": 3 },\r\n        { \"price\": 268, \"title\": \"19枝苏醒玫瑰+2枝粉色桔梗\", \"img\": \"/static/media/1.bdbb4833.jpg\", \"id\": 1, \"number\": 2 },\r\n        { \"price\": 628, \"title\": \"戴安娜粉玫瑰+紫色勿忘我\", \"img\": \"/static/media/3.0900c046.jpg\", \"id\": 3, \"number\": 2 },\r\n        { \"price\": 378, \"title\": \"浓33枝红玫瑰+梦幻黑纱\", \"img\": \"/static/media/2.e88520e9.jpg\", \"id\": 2, \"number\": 1 }],\r\n    \"isReceived\": false,\r\n    \"isSent\": false,\r\n    \"money\": 345\r\n},\r\n{\r\n    \"information\":\r\n    {\r\n        \"receiver\": \"tstxxy\", \"phone\": \"15338755459\", \"address\": {\r\n            \"region\": [\"广东省\", \"广州市\", \"天河区\"],\r\n            \"address\": \"天河体育中心\"\r\n        }, \"expressCompany\": \"顺丰\", \"remark\": \"孟觉觉\"\r\n    },\r\n    \"list\": [\r\n        { \"price\": 158, \"title\": \"11枝红玫瑰+栀子叶\", \"img\": \"/static/media/0.6d5e7135.jpg\", \"id\": 0, \"number\": 3 },\r\n        { \"price\": 268, \"title\": \"19枝苏醒玫瑰+2枝粉色桔梗\", \"img\": \"/static/media/1.bdbb4833.jpg\", \"id\": 1, \"number\": 2 },\r\n        { \"price\": 628, \"title\": \"戴安娜粉玫瑰+紫色勿忘我\", \"img\": \"/static/media/3.0900c046.jpg\", \"id\": 3, \"number\": 2 },\r\n        { \"price\": 378, \"title\": \"浓33枝红玫瑰+梦幻黑纱\", \"img\": \"/static/media/2.e88520e9.jpg\", \"id\": 2, \"number\": 1 }],\r\n    \"isReceived\": false,\r\n    \"isSent\": true,\r\n    money: 123\r\n},\r\n{\r\n    \"information\":\r\n    {\r\n        \"receiver\": \"tstxxy\", \"phone\": \"15338755459\", \"address\": {\r\n            \"region\": [\"广东省\", \"广州市\", \"天河区\"],\r\n            \"address\": \"天河体育中心\"\r\n        }, \"expressCompany\": \"顺丰\", \"remark\": \"孟觉觉\"\r\n    },\r\n    \"list\": [\r\n        { \"price\": 158, \"title\": \"11枝红玫瑰+栀子叶\", \"img\": \"/static/media/0.6d5e7135.jpg\", \"id\": 0, \"number\": 3 },\r\n        { \"price\": 268, \"title\": \"19枝苏醒玫瑰+2枝粉色桔梗\", \"img\": \"/static/media/1.bdbb4833.jpg\", \"id\": 1, \"number\": 2 },\r\n        { \"price\": 628, \"title\": \"戴安娜粉玫瑰+紫色勿忘我\", \"img\": \"/static/media/3.0900c046.jpg\", \"id\": 3, \"number\": 2 },\r\n        { \"price\": 378, \"title\": \"浓33枝红玫瑰+梦幻黑纱\", \"img\": \"/static/media/2.e88520e9.jpg\", \"id\": 2, \"number\": 1 }],\r\n    \"isReceived\": true,\r\n    \"isSent\": true,\r\n    money: 123\r\n}]\r\n\r\nconst Order = observer(() => {\r\n    const { flowerStore } = useContext(RootStoreContext)\r\n\r\n    return (\r\n        <>\r\n            <List\r\n                header={<div>所有订单</div>}\r\n                bordered\r\n                dataSource={data}\r\n                renderItem={({ list, isReceived, isSent, money }) => (\r\n                    <Card>\r\n                        <div className={style.item}>\r\n                            {list.map(({ price, title, img, id, number }) => (\r\n                                <div className={style.cartGoods} key={id}>\r\n                                    <Badge count={number}>\r\n                                        <Image src={img} width={100} />\r\n                                    </Badge>\r\n                                    <div className={style.left}>\r\n                                        <h5 className={style.title}>{title}</h5>\r\n                                        <div className={style.meta}>\r\n                                            <h5>{price}元</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className={style.down}>\r\n                                    <Text type='danger'>总金额:  {money}</Text>\r\n                                <div>\r\n                                    {!isSent ? <Button disabled>尚未发货</Button> : isReceived ? <Button disabled>已经收货</Button> : <Button type='primary'>确认收货</Button>}\r\n                                </div>\r\n                        </div>\r\n                    </Card>\r\n                )}\r\n            />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Order",["91","92"],{"ruleId":"93","severity":1,"message":"94","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"97","line":2,"column":22,"nodeType":"95","messageId":"96","endLine":2,"endColumn":27},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":111,"column":29,"nodeType":"106","endLine":111,"endColumn":32},{"ruleId":"98","replacedBy":"107"},{"ruleId":"100","replacedBy":"108"},{"ruleId":"93","severity":1,"message":"109","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"110","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},{"ruleId":"93","severity":1,"message":"113","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":149,"column":8,"nodeType":"116","endLine":149,"endColumn":17,"suggestions":"117"},{"ruleId":"93","severity":1,"message":"118","line":2,"column":31,"nodeType":"95","messageId":"96","endLine":2,"endColumn":38},{"ruleId":"93","severity":1,"message":"97","line":2,"column":53,"nodeType":"95","messageId":"96","endLine":2,"endColumn":58},{"ruleId":"93","severity":1,"message":"119","line":62,"column":13,"nodeType":"95","messageId":"96","endLine":62,"endColumn":24},{"ruleId":"98","replacedBy":"120"},{"ruleId":"100","replacedBy":"121"},"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["122"],["123"],"'style' is defined but never used.","'Button' is defined but never used.",["122"],["123"],"'api' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flowerStore', 'information', 'list', and 'money'. Either include them or remove the dependency array.","ArrayExpression",["124"],"'Divider' is defined but never used.","'flowerStore' is assigned a value but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [flowerStore, information, list, money, visible]",{"range":"127","text":"128"},[3884,3893],"[flowerStore, information, list, money, visible]"]