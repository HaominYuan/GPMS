[{"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js":"2","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js":"3","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js":"4","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js":"5","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js":"6","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js":"7","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js":"8","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js":"9","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\store\\RootStore.js":"10","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\auth\\AuthContext.js":"11","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\api\\axios-config.js":"12","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\flower\\FlowerContext.js":"13","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\pay\\Pay.js":"14","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\order\\Order.js":"15"},{"size":1611,"mtime":1610017992954,"results":"16","hashOfConfig":"17"},{"size":1933,"mtime":1609662951684,"results":"18","hashOfConfig":"17"},{"size":1360,"mtime":1609159877529,"results":"19","hashOfConfig":"17"},{"size":276,"mtime":1609159622281,"results":"20","hashOfConfig":"17"},{"size":6035,"mtime":1609160526599,"results":"21","hashOfConfig":"17"},{"size":694,"mtime":1609684447742,"results":"22","hashOfConfig":"17"},{"size":1228,"mtime":1609723643586,"results":"23","hashOfConfig":"17"},{"size":2748,"mtime":1609745436778,"results":"24","hashOfConfig":"17"},{"size":594,"mtime":1609678098335,"results":"25","hashOfConfig":"17"},{"size":600,"mtime":1609675694190,"results":"26","hashOfConfig":"17"},{"size":890,"mtime":1609675520657,"results":"27","hashOfConfig":"17"},{"size":230,"mtime":1609674491819,"results":"28","hashOfConfig":"17"},{"size":3169,"mtime":1610024790222,"results":"29","hashOfConfig":"17"},{"size":7595,"mtime":1610020140646,"results":"30","hashOfConfig":"17"},{"size":4753,"mtime":1610026188234,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f2kkcr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js",["67","68"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js",[],["69","70"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js",["71"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport style from './edit.module.scss'\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef();\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async (e) => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{\r\n                        paddingRight: 24,\r\n                    }}\r\n                    onClick={toggleEdit}\r\n                >\r\n                    {children}\r\n                </div>\r\n            );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'name',\r\n                dataIndex: 'name',\r\n                width: '30%',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'age',\r\n                dataIndex: 'age',\r\n            },\r\n            {\r\n                title: 'address',\r\n                dataIndex: 'address',\r\n            },\r\n            {\r\n                title: 'operation',\r\n                dataIndex: 'operation',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: '0',\r\n                    name: 'Edward King 0',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 0',\r\n                },\r\n                {\r\n                    key: '1',\r\n                    name: 'Edward King 1',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 1',\r\n                },\r\n            ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`,\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return (\r\n            <div className={style.edit}>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{\r\n                        marginBottom: 16,\r\n                    }}\r\n                >\r\n                    Add a row\r\n                </Button>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js",["72","73"],"import React from 'react'\r\nimport style from './display.module.scss'\r\nimport Cart from './Cart';\r\nimport Goods from './Goods';\r\nimport { Button, Layout } from 'antd'\r\nimport Search from './Search';\r\nconst { Header, Content } = Layout;\r\n\r\nconst Display = () => {\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Header style={{ background: \"pink\" }}>\r\n                    <Search />\r\n\r\n                </Header>\r\n                <Content style={{ background: \"white\" }}>\r\n                    <Goods />\r\n                    <Cart />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Wrapper = () => (\r\n    <Display />\r\n)\r\n\r\nexport default Wrapper",["74","75"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\store\\RootStore.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\auth\\AuthContext.js",["76"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\api\\axios-config.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\features\\flower\\FlowerContext.js",["77"],"import { useLocalObservable } from \"mobx-react\"\r\nimport img0 from '../../images/flowers/0.jpg'\r\nimport img1 from '../../images/flowers/1.jpg'\r\nimport img2 from '../../images/flowers/2.jpg'\r\nimport img3 from '../../images/flowers/3.jpg'\r\nimport { api } from \"../../api/axios-config\"\r\n\r\nconst initalValues = {\r\n    flowers: [{\r\n        price: 158,\r\n        title: '11枝红玫瑰+栀子叶',\r\n        img: img0,\r\n        id: 0\r\n    }, {\r\n        price: 268,\r\n        title: '19枝苏醒玫瑰+2枝粉色桔梗',\r\n        img: img1,\r\n        id: 1\r\n    }, {\r\n        price: 378,\r\n        title: '浓33枝红玫瑰+梦幻黑纱',\r\n        img: img2,\r\n        id: 2\r\n    }, {\r\n        price: 628,\r\n        title: '戴安娜粉玫瑰+紫色勿忘我',\r\n        img: img3,\r\n        id: 3\r\n    },\r\n    ],\r\n    searchText: \"\",\r\n    cart: new Map(),\r\n    cartVisible: false,\r\n    order: []\r\n}\r\n\r\nconst FlowerContext = () => {\r\n    const store = useLocalObservable(() => ({\r\n        ...initalValues,\r\n\r\n        search(text) {\r\n            store.searchText = text\r\n        },\r\n\r\n        get result() {\r\n            return store.flowers.filter((element) => {\r\n                return element.title.search(store.searchText) !== -1\r\n            })\r\n        },\r\n\r\n        setCartVisible(state) {\r\n            store.cartVisible = state\r\n        },\r\n\r\n        addGoods(id) {\r\n            let count = store.cart.get(id)\r\n            count = count ? count + 1 : 1\r\n            store.cart.set(id, count)\r\n        },\r\n\r\n        minusGoods(id) {\r\n            let count = store.cart.get(id)\r\n            if (!count) return\r\n            count = count - 1\r\n            if (count === 0) {\r\n                store.cart.delete(id)\r\n            } else {\r\n                store.cart.set(id, count)\r\n            }\r\n        },\r\n\r\n        get cartGoods() {\r\n            const result = []\r\n            store.cart.forEach((value, key) => {\r\n                result.push(\r\n                    {\r\n                        ...store.flowers[key],\r\n                        number: value,\r\n                        key\r\n                    }\r\n                )\r\n            });\r\n\r\n            return result\r\n        },\r\n\r\n        addOrder(information, list, money) {\r\n            // console.log(JSON.stringify(information), JSON.stringify(list))\r\n\r\n            list.forEach(({ id }) => {\r\n                store.cart.delete(id)\r\n            })\r\n\r\n            // console.log(JSON.stringify(store.cart))\r\n\r\n            store.order.push({\r\n                information,\r\n                list,\r\n                isReceived: false,\r\n                isSent: false,\r\n                money\r\n            })\r\n            // console.log(store.order)\r\n        },\r\n\r\n        get orderList() {\r\n            return store.order.map(value => {\r\n                const { list } = value\r\n                let newList = list.map(({id, number}) => {\r\n                    return {\r\n                        ...store.flowers[id],\r\n                        number\r\n                    }\r\n                })\r\n                return {...value, list: newList}\r\n            })\r\n        }\r\n    }))\r\n\r\n    return store\r\n}\r\n\r\nexport default FlowerContext","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\pay\\Pay.js",["78"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\order\\Order.js",["79","80","81"],{"ruleId":"82","severity":1,"message":"83","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":2,"column":22,"nodeType":"84","messageId":"85","endLine":2,"endColumn":27},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":111,"column":29,"nodeType":"93","endLine":111,"endColumn":32},{"ruleId":"82","severity":1,"message":"94","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"95","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":16},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","replacedBy":"97"},{"ruleId":"82","severity":1,"message":"98","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":23},{"ruleId":"82","severity":1,"message":"99","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":149,"column":8,"nodeType":"102","endLine":149,"endColumn":17,"suggestions":"103"},{"ruleId":"82","severity":1,"message":"104","line":2,"column":31,"nodeType":"84","messageId":"85","endLine":2,"endColumn":38},{"ruleId":"82","severity":1,"message":"86","line":2,"column":53,"nodeType":"84","messageId":"85","endLine":2,"endColumn":58},{"ruleId":"82","severity":1,"message":"105","line":62,"column":13,"nodeType":"84","messageId":"85","endLine":62,"endColumn":24},"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'style' is defined but never used.","'Button' is defined but never used.",["106"],["107"],"'createContext' is defined but never used.","'api' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flowerStore', 'information', and 'list'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'Divider' is defined but never used.","'flowerStore' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [flowerStore, information, list, visible]",{"range":"111","text":"112"},[3877,3886],"[flowerStore, information, list, visible]"]