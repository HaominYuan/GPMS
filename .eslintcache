[{"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js":"2","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\auth\\Auth.js":"3","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js":"4","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js":"5","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js":"6","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js":"7","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js":"8","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js":"9","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js":"10"},{"size":1337,"mtime":1609317316282,"results":"11","hashOfConfig":"12"},{"size":2016,"mtime":1609160086920,"results":"13","hashOfConfig":"12"},{"size":985,"mtime":1609158518476,"results":"14","hashOfConfig":"12"},{"size":1360,"mtime":1609159877529,"results":"15","hashOfConfig":"12"},{"size":276,"mtime":1609159622281,"results":"16","hashOfConfig":"12"},{"size":6035,"mtime":1609160526599,"results":"17","hashOfConfig":"12"},{"size":1154,"mtime":1609322436574,"results":"18","hashOfConfig":"12"},{"size":1909,"mtime":1609322778332,"results":"19","hashOfConfig":"12"},{"size":701,"mtime":1609321436412,"results":"20","hashOfConfig":"12"},{"size":563,"mtime":1609322444067,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1f2kkcr",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\index.js",["43","44"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\login\\Login.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\auth\\Auth.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\home\\Home.js",["45","46"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\404\\Nomatch.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\edit\\Edit.js",["47"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport style from './edit.module.scss'\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef();\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async (e) => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{\r\n                        paddingRight: 24,\r\n                    }}\r\n                    onClick={toggleEdit}\r\n                >\r\n                    {children}\r\n                </div>\r\n            );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'name',\r\n                dataIndex: 'name',\r\n                width: '30%',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'age',\r\n                dataIndex: 'age',\r\n            },\r\n            {\r\n                title: 'address',\r\n                dataIndex: 'address',\r\n            },\r\n            {\r\n                title: 'operation',\r\n                dataIndex: 'operation',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: [\r\n                {\r\n                    key: '0',\r\n                    name: 'Edward King 0',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 0',\r\n                },\r\n                {\r\n                    key: '1',\r\n                    name: 'Edward King 1',\r\n                    age: '32',\r\n                    address: 'London, Park Lane no. 1',\r\n                },\r\n            ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n            key: count,\r\n            name: `Edward King ${count}`,\r\n            age: 32,\r\n            address: `London, Park Lane no. ${count}`,\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return (\r\n            <div className={style.edit}>\r\n                <Button\r\n                    onClick={this.handleAdd}\r\n                    type=\"primary\"\r\n                    style={{\r\n                        marginBottom: 16,\r\n                    }}\r\n                >\r\n                    Add a row\r\n                </Button>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable","C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Display.js",["48"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Goods.js",["49"],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Cart.js",[],"C:\\Users\\Administrator\\Desktop\\GPMS\\GPMS\\src\\pages\\display\\Search.js",[],{"ruleId":"50","severity":1,"message":"51","line":17,"column":13,"nodeType":"52","messageId":"53","endLine":17,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":18,"column":11,"nodeType":"52","messageId":"53","endLine":18,"endColumn":19},{"ruleId":"50","severity":1,"message":"55","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":20},{"ruleId":"50","severity":1,"message":"56","line":2,"column":22,"nodeType":"52","messageId":"53","endLine":2,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":111,"column":29,"nodeType":"59","endLine":111,"endColumn":32},{"ruleId":"50","severity":1,"message":"60","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"61","line":9,"column":20,"nodeType":"52","messageId":"53","endLine":9,"endColumn":31},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'style' is defined but never used.","'useObserver' is defined but never used."]